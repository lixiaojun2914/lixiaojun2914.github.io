<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on My Blog</title>
    <link>https://lixiaojun2914.github.io/categories/python/</link>
    <description>Recent content in Python on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 28 Jan 2022 21:13:18 +0800</lastBuildDate><atom:link href="https://lixiaojun2914.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pytorch笔记</title>
      <link>https://lixiaojun2914.github.io/p/pytorch/</link>
      <pubDate>Fri, 28 Jan 2022 21:13:18 +0800</pubDate>
      
      <guid>https://lixiaojun2914.github.io/p/pytorch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Matplotlib笔记</title>
      <link>https://lixiaojun2914.github.io/p/matplotlib/</link>
      <pubDate>Fri, 28 Jan 2022 21:13:09 +0800</pubDate>
      
      <guid>https://lixiaojun2914.github.io/p/matplotlib/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Numpy笔记</title>
      <link>https://lixiaojun2914.github.io/p/numpy/</link>
      <pubDate>Fri, 28 Jan 2022 21:12:59 +0800</pubDate>
      
      <guid>https://lixiaojun2914.github.io/p/numpy/</guid>
      <description>Numpy笔记 ndarray ndarray的属性 import numpy as np a = np.arange(6).reshape(2, 3) print(a) # 维度 print(f&amp;#39;shape: {a.shape}&amp;#39;) # 轴 print(f&amp;#39;ndim: {a.ndim}&amp;#39;) # 元素大小 print(f&amp;#39;itemsize: {a.itemsize}&amp;#39;) # 元素个数 print(f&amp;#39;size: {a.size}&amp;#39;) # 元素类型 print(f&amp;#39;dtype: {a.dtype}&amp;#39;) # 元数据 print(f&amp;#39;data: {a.data}&amp;#39;) 数组创建 # 定义数组形状 &amp;gt;&amp;gt;&amp;gt; s = (3, 3) # 创建全为零的数组 &amp;gt;&amp;gt;&amp;gt; np.zeros(s) array([[0., 0., 0.], [0., 0., 0.], [0., 0., 0.]]) # 创建全为一的数组 &amp;gt;&amp;gt;&amp;gt; np.ones(s) array([[1., 1., 1.], [1., 1., 1.], [1., 1., 1.]]) # 创建空数组，元素用随机数填充 &amp;gt;&amp;gt;&amp;gt; np.</description>
    </item>
    
    <item>
      <title>Python笔记</title>
      <link>https://lixiaojun2914.github.io/p/python/</link>
      <pubDate>Fri, 28 Jan 2022 21:12:48 +0800</pubDate>
      
      <guid>https://lixiaojun2914.github.io/p/python/</guid>
      <description>Pyhton语法笔记 列表生成式 # 列表生成式即List Comprehensions, 用来生成特定的列表 # 在列表生成式中，可以使用条件判断语句 # if放在for前面是表达式，可以使用else # if放在for后面是过滤条件，不可使用else [x if x % 2 == 0 else -x for x in range(1, 11)] [-1, 2, -3, 4, -5, 6, -7, 8, -9, 10] # 列表生成式可以嵌套使用 &amp;gt;&amp;gt;&amp;gt; [m + n for m in &amp;#39;ABC&amp;#39; for n in &amp;#39;XYZ&amp;#39;] [&amp;#39;AX&amp;#39;, &amp;#39;AY&amp;#39;, &amp;#39;AZ&amp;#39;, &amp;#39;BX&amp;#39;, &amp;#39;BY&amp;#39;, &amp;#39;BZ&amp;#39;, &amp;#39;CX&amp;#39;, &amp;#39;CY&amp;#39;, &amp;#39;CZ&amp;#39;] 生成器 # 可以和列表生成式类似，使用()代替[]来生成generator &amp;gt;&amp;gt;&amp;gt; g = (x * x for x in range(3)) # 使用next调用generator生成下一个数据 &amp;gt;&amp;gt;&amp;gt; next(g) 0 &amp;gt;&amp;gt;&amp;gt; next(g) 1 # 使用for遍历generator &amp;gt;&amp;gt;&amp;gt; for n in g: .</description>
    </item>
    
  </channel>
</rss>
